// Animations
@mixin modal-animation($time: 0.3s, $opacity: 1) {
  animation: open-modal $time;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;

  @keyframes open-modal {
    0% {
      opacity: 0;
    }

    100% {
      opacity: $opacity;
    }
  }
}

$media-xs-viewport: 600;
$media-s-viewport: 768;
$media-m-viewport: 1024;
$media-l-viewport: 1440;
$media-xl-viewport: 1920;

@mixin media-bp-up($breakpoint) {
  @media screen and (width >= #{$breakpoint}px) {
    @content;
  }
}

@mixin media-bp-down($breakpoint) {
  @media screen and (width < #{$breakpoint}px) {
    @content;
  }
}

@mixin no-touch() {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

// Font
@function strip-unit($number) {
  // stylelint-disable-next-line scss/at-rule-conditional-no-parentheses
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@mixin text-overflow() {
  overflow: hidden;
  display: block;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-overflow-line-clamp($lines-to-show: 1, $line-height: $line-height-base, $font-size: $font-size-base) {
  position: relative;

  overflow: hidden;
  display: block;

  padding: 0 !important;

  text-overflow: ellipsis;

  @if $lines-to-show == 1 {
    white-space: nowrap;
  }

  /* stylelint-disable-next-line scss/at-else-empty-line-before */
  @else {
    height: #{strip-unit($line-height) * $lines-to-show}em;
    font-size: $font-size;
    line-height: #{strip-unit($line-height)}em;
  }
}

// Input, select, textarea
@mixin form-field() {
  $root: &;
  $mb: 12px;

  position: relative;
  margin-bottom: $mb;
  padding-top: 10px;

  &__label {
    pointer-events: none;

    position: absolute;
    top: 20px;
    left: 0;

    display: block;

    font-weight: 500;
    color: var(--hint);

    transition: all 0.3s;

    &:has(~ .root__error.error-active) {
      color: var(--hint);
    }
  }

  &__field {
    width: 100%;
    padding: 13px 0;

    color: var(--text);

    background: transparent;
    border: none;
    border-bottom: 1px solid var(--icon);

    &::placeholder {
      font-size: 0;
      color: transparent;
    }

    &[disabled] {
      color: var(--hint) !important;

      & + #{$root}__label {
        color: var(--icon) !important;
      }
    }

    &:not([value=""]),
    &_filled,
    &:focus {
      outline: none;

      & + #{$root}__label {
        transform: translate(-6%, -100%) scale(0.9);
        color: var(--accent);

        &:has(~ .root__error.error-active) {
          color: var(--error-color);
        }
      }
    }

    &:focus {
      color: var(--text);
      border-color: var(--accent);
    }

    &:has(~ .root__error.error-active) {
      border-color: var(--error-color);
    }
  }

  &__error {
    position: relative;

    &.error-active {
      margin-bottom: -$mb;
    }

    &_inner {
      font: var(--font-s);
      color: var(--error-color);
      text-align: center;
    }
  }
}
